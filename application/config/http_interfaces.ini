;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; toKernel - Universal PHP Framework          ;
; HTTP Intercase configuration                ;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

;
; toKernel HTTP mode can contain more than one interfaces.
; Interface - meaning a HTTP request/response functionality with own configuration.
;
; Each interface should be generally defined in application.ini "HTTP_INTERCASES" section.
; For instance, you can have 4 interfaceses defined with values 1 (enabled) and 0 (disabled).
;   ; WARNING! commenting out or setting to "0" this interface value will halt the default frontend functionality.
;   tokernel_default=1
;   backend=1
;   api=1
;   customers=0
;
; In this file, for instance, you can have different interfaces like:
;
; "backend" - Website backend aka Administration area with special rules.
;   http://example.com/backend
;   http://backend.example.com
;
; "administration" - This interface inherites all configuration values from "backend" interface.
;   In other words, to have different interfaces with exact same configucration values you can just inherit some of them.
;   http://example.com/administration
;   http://administration.example.com
;
; "api" - RESTful API interface. This example contains also sub-interfaces "/v1", "/v2".
;   http://example.com/api
;   http://example.com/api/v1
;   http://example.com/api/v2
;   http://api.example.com/v1
;   http://api.example.com/v2
;
; "customers" - interface with special configuration.
;   http://example.com/customers
;   http://customers.example.com
;
; In examples above, you can see, that an interface can be defined also as a subdomain. But it should in enabled in section.
; For an interface configuration, see first item "tokernel_default" section with items described in.
; If some of the configuration value not specified in custom interface, a value will be used from "tokernel_default" section.
;
;-----------------------------------------------------
;
; System default HTTP interface.
; If no need to run more than one interfaces, this one can accept as any.
;
; NOTICE: If you have more than one interfaces defined, this one will run and accept for website frontend requests.
; i.e. http://example.com
;
[tokernel_default]

enabled=1
; The URL pattern.
; In this default we not using any.
pattern=

; In case, if you want to have different interfaces with same configuration values,
; you can just inherit from one of interface and define some of your own configuration values.
; See example bellow "administration" interface
inherited=

; @todo check name
under_maintenance=0

; Interface base URL (optional).
; In case, if your application located in sub-directory of web document root,
; it is recommended to set base url of your application.
; Examples:
; http://localhost/my_project/
; http://www.example.com/blog/
base_url=

; Allow dashes in url
; If dashes is allowed, the url can contain segments like:
; /addon-name-with-dashes/and-action-name/param-1/param-2
;
; However in URL request initialization dashes in segments for addon and action names
; will be converted to underscores for proper functionality:
; addon: addon_name_with_dashes
; action: and_action_name
; params: param-1, param-2
;
; Notice: URL parameters other than addon and action will be parsed as is.
;         (No convertion from dashes to underscores).
; Notice: in routes configuration dashes is allowed by default.
;         You can define routes with dashes which will be parsed automatically.
allow_url_dashes=1

; Parse language prefix from url.
; If you planning to develop multilanguage web application, and want to be able
; to define page language from URL, this flag should be defined as "1".
; For example, http://www.example.com/en will be parsed as English language by "en" prefix.
parse_url_language=1

; It is possible to detect browser language and initialize, if:
; Browser language matches with allowed languages (see bellow).
; Visited to web page without language prefix.
catch_browser_language=1

; Default language.
default_language=en

; Allowed languages.
allowed_languages=en|ru|hy

; Run hooks.
allow_http_hooks=1

; Default addon and action for interface.
; In MVC words, this is default controller and method (index).
default_callable_addon=example
default_callable_action=index

; WEB Interface theme directory name.
; In toKernel framework, each HTTP Interface can have own theme or use existing one.
; In case, if you configuring RESTful API interface, you can leave this value as empty.
;
; This is theme directory name located in: /application/themes/
web_theme=default

; WEB Interface templates directory name.
; In toKernel framework, each HTTP Interface can have own tempaltes directory or use existing one.
; In case, if you configuring RESTful API interface, you can leave this value as empty.
;
; This is tempaltes directory name located in: /application/tempaltes/
web_templates=default

; PHP's built-in default is text/html
; http://php.net/default-mimetype
default_mimetype=text/html

; PHP's default character set is set to empty.
; http://php.net/default-charset
default_charset=UTF-8

; Default timestamp format.
timestamp_format=Y-m-d H:i:s

; Default date format.
date_format=Y-m-d

; Default time format.
time_format=H:i:s

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; Possible examples of inteface detection configuration.   ;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

; NOTICE! "www" value in pattern is sensitive.
; If your interface can accept also www, you should define it too.
; In other words, www.example.com and example.com looks like different resources.
; If you want to accept interface with and without www than you have to write *.example.com
; But with this approach, please care about subdomains, they should be defined before this.
; Imagine, that the www.example.com and example.com are diffferent addresses and the www looks like subdomain.
; This is because SEO engines always checks if your web resource starts with www.


; Some of real live examples.

[Zenbook]
enabled=1
pattern=*localhost/tokernel2dev*

; Backend path
; example.com/backend
; example.com/backend/any/path
[/backend]
enabled=1
pattern=*/backend*
default_callable_addon=example
default_callable_action=index
web_theme=admin-panel

; Backend path alias
; example.com/back-office/dashboard
; example.com/back-office/dashboard/any/path
[/back-office]
inherited=/backend
enabled=1
pattern=*/back-office/dashboard*

[sub.back-office]
inherited=/backend
enabled=1
pattern=sub2.*/back-office/dashboard*

; API Version 1 path
; example.com/api/v1
; example.com/api/v1/any/path
[api/v1]
enabled=1
pattern=*/api/v1*

; API Version 2 path
; example.com/api/v2
; example.com/api/v2/any/path
[api/v2]
enabled=1
pattern=*/api/v2*

; API Version 1 with subdomain and path
; api.example.com/v1
; api.example.com/v1/any/path
[api.*/v1]
enabled=1
pattern=api.*/v1*

; API Version 2 with subdomain and path
; api.example.com/v2
; api.example.com/v2/any/path
[api.*/v2]
enabled=1
pattern=api.*/v2*

; Another subdomain example.
; sub2.tokernel2.local/v1/
; sub2.tokernel2.local/v1/any/path
[sub2.*/v1]
enabled=1
pattern=sub2.tokernel2.local/v1*

; Actual Domain
; example.com
; example.com/any/path
[example.com]
enabled=1
pattern=example.com*
default_language=en

; Actual Domain
; example.ru
; example.ru/any/path
[example.ru]
enabled=1
pattern=example.ru*
default_language=ru

; End of file. Last update: 05-05-2017